{% set file_voter = 'OHMedia\\FileBundle\\Security\\Voter\\FileVoter' %}

{% set file_folder_voter = 'OHMedia\\FileBundle\\Security\\Voter\\FileFolderVoter' %}

{% set attributes = {
  file: {
    edit: constant(file_voter ~ '::EDIT'),
    move: constant(file_voter ~ '::MOVE'),
    lock: constant(file_voter ~ '::LOCK'),
    unlock: constant(file_voter ~ '::UNLOCK'),
    delete: constant(file_voter ~ '::DELETE'),
  },
  folder: {
    edit: constant(file_folder_voter ~ '::EDIT'),
    move: constant(file_folder_voter ~ '::MOVE'),
    lock: constant(file_folder_voter ~ '::LOCK'),
    unlock: constant(file_folder_voter ~ '::UNLOCK'),
    delete: constant(file_folder_voter ~ '::DELETE'),
  },
} %}

{% set multiselect_form_id = 'multiselect_form' %}

{% macro file_row(file, attributes, multiselect_form, multiselect_form_id) %}
  {% set checkbox = multiselect_form.files.children[file.id] %}

  <tr>
    <td>
      <input type="checkbox" name="{{ checkbox.vars.full_name }}" value="{{ file.id }}" class="form-check-input" multiple form="{{ multiselect_form_id }}" />
    </td>
    <td style="font-size:1.5rem;text-align:center">
      {% if file.image %}
        {{ image_tag(file, {
          width: 55,
          height: 55,
          'class': 'd-block',
        }) }}
      {% elseif file.locked %}
        {{ bootstrap_icon('file-earmark-lock2-fill text-secondary') }}
      {% else %}
        {{ bootstrap_icon('file-earmark-fill') }}
      {% endif %}
    </td>
    <td>
      <a href="{{ file_path(file) }}" target="_blank">
        {{ file.filename }}
      </a>
      {% if file.image and file.locked %}
        {{ bootstrap_icon('lock-fill text-secondary') }}
      {% endif %}
      {% if file.image and file.alt %}
        <small class="text-muted d-block">{{ file.alt }}</small>
      {% endif %}
    </td>
    <td>{{ file_size_binary(file, 2) }}</td>
    <td>
      {% if file.image %}
        {{ shortcode('image('~file.id~')') }}
      {% else %}
        {{ shortcode('file_href('~file.id~')') }}
      {% endif %}
    </td>
    <td>{{ file.updatedAt|datetime }}</td>
    <td>
      {% if is_granted(attributes.file.edit, file) %}
        <a href="{{ path('file_edit', {id: file.id}) }}" class="btn btn-sm btn-primary btn-action" title="Edit">
          {{ bootstrap_icon('pen-fill') }}
          <span class="visually-hidden">Edit</span>
        </a>
      {% endif %}

      {% if is_granted(attributes.file.move, file) %}
        <a href="{{ path('file_move', {id: file.id}) }}" class="btn btn-sm btn-primary btn-action" title="Move">
          {{ bootstrap_icon('folder-fill') }}
          <span class="visually-hidden">Move</span>
        </a>
      {% endif %}

      {% if is_granted(attributes.file.lock, file) %}
        {% embed '@OHMediaBackend/embed/form_post_confirm.html.twig' %}
          {% block form_class %}btn-action{% endblock %}
          {% block form_action %}{{ path('file_lock', {id: file.id}) }}{% endblock %}
          {% block confirm_message %}Are you sure you want to lock this {{ file.image ? 'image' : 'file' }}?{% endblock %}
          {% block csrf_name %}lock_file_{{ file.id }}{% endblock %}
          {% block button_class %}btn btn-sm btn-secondary{% endblock %}
          {% block button_title %}Lock{% endblock %}
          {% block button_html %}
            {{ bootstrap_icon('lock-fill') }}
            <span class="visually-hidden">Lock</span>
          {% endblock %}
        {% endembed %}
      {% endif %}

      {% if is_granted(attributes.file.unlock, file) %}
        {% embed '@OHMediaBackend/embed/form_post_confirm.html.twig' %}
          {% block form_class %}btn-action{% endblock %}
          {% block form_action %}{{ path('file_unlock', {id: file.id}) }}{% endblock %}
          {% block confirm_message %}Are you sure you want to unlock this {{ file.image ? 'image' : 'file' }}?{% endblock %}
          {% block csrf_name %}unlock_file_{{ file.id }}{% endblock %}
          {% block button_class %}btn btn-sm btn-success{% endblock %}
          {% block button_title %}Unlock{% endblock %}
          {% block button_html %}
            {{ bootstrap_icon('unlock-fill') }}
            <span class="visually-hidden">Unlock</span>
          {% endblock %}
        {% endembed %}
      {% endif %}

      {% set delete_file_csrf_name = 'delete_file_' ~ file.id %}

      <form
        class="btn-action invisible"
        method="post"
        action="{{ path('file_delete', {id: file.id}) }}"
        data-confirm="Are you sure you want to delete this {{ file.image ? 'image' : 'file' }}?"
        data-can-delete="{{ path('file_can_delete', {id: file.id}) }}"
      >
        <input type="hidden" class="btn-check" name="{{ delete_file_csrf_name }}" value="{{ csrf_token(delete_file_csrf_name) }}">
        <button class="btn btn-sm btn-danger" type="submit" title="Delete">
          <i class="bi bi-trash-fill"></i>
          <span class="visually-hidden">Delete</span>
        </button>
      </form>
    </td>
  </tr>
{% endmacro %}

{% macro file_folder_row(folder, attributes) %}
  <tr>
    <td>&nbsp;</td>
    <td style="font-size:1.5rem;text-align:center">
      {% if folder.locked %}
        {{ bootstrap_icon('folder-x text-secondary') }}
      {% else %}
        {{ bootstrap_icon('folder-check') }}
      {% endif %}
    </td>
    <td>
      <a href="{{ path('file_folder_view', {id: folder.id}) }}">
        {{ folder.name }}/
      </a>
    </td>
    <td>{{ format_bytes_binary(folder.size, 2) }}</td>
    <td>&nbsp;</td>
    <td>{{ folder.updatedAt|datetime }}</td>
    <td>
      {% if is_granted(attributes.folder.edit, folder) %}
        <a href="{{ path('file_folder_edit', {id: folder.id}) }}" class="btn btn-sm btn-primary btn-action" title="Edit">
          {{ bootstrap_icon('pen-fill') }}
          <span class="visually-hidden">Edit</span>
        </a>
      {% endif %}

      {% if is_granted(attributes.folder.move, folder) %}
        <a href="{{ path('file_folder_move', {id: folder.id}) }}" class="btn btn-sm btn-primary btn-action" title="Move">
          {{ bootstrap_icon('folder-fill') }}
          <span class="visually-hidden">Move</span>
        </a>
      {% endif %}

      {% if is_granted(attributes.folder.lock, folder) %}
        {% embed '@OHMediaBackend/embed/form_post_confirm.html.twig' %}
          {% block form_class %}btn-action{% endblock %}
          {% block form_action %}{{ path('file_folder_lock', {id: folder.id}) }}{% endblock %}
          {% block confirm_message %}Are you sure you want to lock this folder?{% endblock %}
          {% block csrf_name %}lock_file_folder_{{ folder.id }}{% endblock %}
          {% block button_class %}btn btn-sm btn-secondary{% endblock %}
          {% block button_title %}Lock{% endblock %}
          {% block button_html %}
            {{ bootstrap_icon('lock-fill') }}
            <span class="visually-hidden">Lock</span>
          {% endblock %}
        {% endembed %}
      {% endif %}

      {% if is_granted(attributes.folder.unlock, folder) %}
        {% embed '@OHMediaBackend/embed/form_post_confirm.html.twig' %}
          {% block form_class %}btn-action{% endblock %}
          {% block form_action %}{{ path('file_folder_unlock', {id: folder.id}) }}{% endblock %}
          {% block confirm_message %}Are you sure you want to unlock this folder?{% endblock %}
          {% block csrf_name %}unlock_file_folder_{{ folder.id }}{% endblock %}
          {% block button_class %}btn btn-sm btn-success{% endblock %}
          {% block button_title %}Unlock{% endblock %}
          {% block button_html %}
            {{ bootstrap_icon('unlock-fill') }}
            <span class="visually-hidden">Unlock</span>
          {% endblock %}
        {% endembed %}
      {% endif %}

      {% if folder.getChildCount < 100 %}
        {% set delete_folder_csrf_name = 'delete_file_folder_' ~ folder.id %}

        <form
          class="btn-action invisible"
          method="post"
          action="{{ path('file_folder_delete', {id: folder.id}) }}"
          data-confirm="Are you sure you want to delete this folder?"
          data-can-delete="{{ path('file_folder_can_delete', {id: folder.id}) }}"
        >
          <input type="hidden" class="btn-check" name="{{ delete_folder_csrf_name }}" value="{{ csrf_token(delete_folder_csrf_name) }}">
          <button class="btn btn-sm btn-danger" type="submit" title="Delete">
            <i class="bi bi-trash-fill"></i>
            <span class="visually-hidden">Delete</span>
          </button>
        </form>
      {% endif %}
    </td>
  </tr>
{% endmacro %}

<table class="table table-sm table-striped">
  <thead>
    <tr>
      <th>&nbsp;</th>
      <th style="width:55px">&nbsp;</th>
      <th>Name</th>
      <th>Size</th>
      <th>Shortcode</th>
      <th>Last Updated</th>
      <th>&nbsp;</th>
    </tr>
  </thead>
  <tbody>
  {% if back %}
    {% set back_path = parent
      ? path('file_folder_view', {id: parent.id})
      : path('file_index')
    %}
    <tr>
      <td>&nbsp;</td>
      <td style="font-size:1.5rem;text-align:center">
        {{ bootstrap_icon('arrow-up-left-square') }}
      </td>
      <td colspan="5">
        <a href="{{ back_path }}">Back</a>
      </td>
    </tr>
  {% endif %}
  {% set total_size = 0 %}
  {% for item in items %}
    {% set total_size = total_size + item.size %}
    {% if is_file_entity(item) %}
      {{ _self.file_row(item, attributes, multiselect_form, multiselect_form_id) }}
    {% elseif is_file_folder_entity(item) %}
      {{ _self.file_folder_row(item, attributes) }}
    {% endif %}
  {% else %}
    <tr><td colspan="100%" class="text-center">No files found.</td></tr>
  {% endfor %}
  </tbody>
  <tfoot>
    <tr>
      <td colspan="3">&nbsp;</td>
      <td colspan="4"><b>{{ format_bytes_binary(total_size, 2) }}</b></td>
    </tr>
  </tfoot>
</table>

{# files checkboxes are rendered inside of file_row macro #}
{% do multiselect_form.files.setRendered %}

{# buttons are rendered inside of modals #}
{% do multiselect_form.move.setRendered %}
{% do multiselect_form.delete.setRendered %}

<div id="multiselect_modal_move" class="modal fade" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Multiselect Move</h5>
      </div>
      <div class="modal-body">
        {{ form_row(multiselect_form.folder) }}
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="submit" class="btn btn-primary" id="{{ multiselect_form.move.vars.id }}" name="{{ multiselect_form.move.vars.full_name }}" form="{{ multiselect_form_id }}">Move</button>
      </div>
    </div>
  </div>
</div>

<div id="multiselect_modal_delete" class="modal fade" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Multiselect Delete</h5>
      </div>
      <div class="modal-body">Are you sure you want to delete the selected files? Only files that have been</div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="submit" class="btn btn-primary" id="{{ multiselect_form.delete.vars.id }}" name="{{ multiselect_form.delete.vars.full_name }}" form="{{ multiselect_form_id }}">Delete</button>
      </div>
    </div>
  </div>
</div>

{{ form(multiselect_form, {
  attr: {
    id: multiselect_form_id,
  },
}) }}

<script>
document.addEventListener('DOMContentLoaded', function() {
  const intersectionObserver = new IntersectionObserver((entries) => {
    entries.forEach(function(entry) {
      if (entry.intersectionRatio > 0) {
        const deleteIcon = entry.target;

        intersectionObserver.unobserve(deleteIcon);

        fetch(deleteIcon.dataset.canDelete)
          .then(r => r.json())
          .then(r => {
            if (r) {
              deleteIcon.classList.remove('invisible');
            }
          });
      }
    });
  });

  const deleteIcons = document.querySelectorAll('[data-can-delete]');

  deleteIcons.forEach(function(deleteIcon) {
    intersectionObserver.observe(deleteIcon);
  });

  const form = document.getElementById('{{ multiselect_form_id }}');

  const dropdown = document.getElementById('multiselect_dropdown');

  const fileCheckboxes = form.elements['{{ multiselect_form.files.vars.full_name }}[]'];

  function toggleDropdown() {
    for (let i = 0; i < fileCheckboxes.length; i++) {
      if (fileCheckboxes.item(i).checked) {
        dropdown.disabled = false;

        return;
      }
    }

    dropdown.disabled = true;
  }

  if (fileCheckboxes) {
    fileCheckboxes.forEach(function(checkbox) {
      checkbox.addEventListener('change', toggleDropdown);
    });
  }

  const dropdownMove = document.getElementById('multiselect_dropdown_move');

  const dropdownDelete = document.getElementById('multiselect_dropdown_delete');

  const moveModalEl = document.getElementById('multiselect_modal_move');

  const moveModal = new window.Bootstrap.Modal(moveModalEl, {
    keyboard: false,
    backdrop: 'static',
  });

  dropdownMove.addEventListener('click', (e) => {
    e.preventDefault();

    moveModal.show();
  });

  const deleteModalEl = document.getElementById('multiselect_modal_delete');

  const deleteModal = new window.Bootstrap.Modal(deleteModalEl, {
    keyboard: false,
    backdrop: 'static',
  });

  dropdownDelete.addEventListener('click', (e) => {
    e.preventDefault();

    deleteModal.show();
  });
});
</script>
